{"version":3,"sources":["views/category/AllCategories/index.js"],"names":["Category","category","useSelector","state","useDispatch","useState","setShow","categoryList","renderCategories","categories","myCategories","push","name","value","children","length","console","log","am4core","am4themes_animated","networkSeries","am4plugins_forceDirected","series","dataFields","linkWith","id","nodes","template","tooltipText","fillOpacity","data","label","text","fontSize","maxLevels","maxRadius","manyBodyStrength","hideOversized","truncate","useEffect","loading","Fragment","xs","style","background","borderRadius","md","display","justifyContent","marginBottom","margin","color"],"mappings":"uQA4FeA,UApFE,WAChB,IAAMC,EAAWC,aAAY,SAACC,GAAD,OAAWA,EAAMF,YAE9C,GADiBG,cACSC,oBAAS,IAAnC,mBAAcC,GAAd,WAcMC,EAZmB,SAAnBC,EAAoBC,GACzB,IADwC,EACpCC,EAAe,GADqB,cAEnBD,GAFmB,IAExC,2BAAiC,CAAC,IAAzBR,EAAwB,QAChCS,EAAaC,KAAK,CACjBC,KAAMX,EAASW,KACfC,MAAOZ,EAASa,SAASC,OAAS,EAAI,GAAM,GAC5CD,SAAUb,EAASa,SAASC,OAAS,GAAKP,EAAiBP,EAASa,aAN9B,8BASxC,OAAOJ,EAGaF,CAAiBP,EAASQ,YAE/CO,QAAQC,IAAI,CAAEV,iBAEdW,IAAiBC,KAGjB,IAGIC,EAHQF,IAAe,WAAYG,KAGbC,OAAOX,KAAK,IAAIU,KAgC1C,OA9BAD,EAAcG,WAAWC,SAAW,WACpCJ,EAAcG,WAAWX,KAAO,OAChCQ,EAAcG,WAAWE,GAAK,OAC9BL,EAAcG,WAAWV,MAAQ,QACjCO,EAAcG,WAAWT,SAAW,WAEpCM,EAAcM,MAAMC,SAASC,YAAc,SAC3CR,EAAcM,MAAMC,SAASE,YAAc,EAE3CT,EAAcU,KAAOvB,EAErBa,EAAcM,MAAMC,SAASI,MAAMC,KAAO,SAC1CZ,EAAca,SAAW,GACzBb,EAAcc,UAAY,EAC1Bd,EAAce,UAAYjB,IAAgB,GAC1CE,EAAcgB,kBAAoB,GAClChB,EAAcM,MAAMC,SAASI,MAAMM,eAAgB,EACnDjB,EAAcM,MAAMC,SAASI,MAAMO,UAAW,EAE9CC,qBACC,WACMtC,EAASuC,SACblC,GAAQ,KAGV,CAAEL,EAASuC,UAMX,cAAC,IAAMC,SAAP,UACC,cAAC,IAAD,UACC,cAAC,IAAD,CAAMC,GAAG,KAAT,SACC,eAAC,IAAD,WACC,cAAC,IAAD,CAAMC,MAAO,CAAEC,WAAY,UAAWC,aAAc,OAApD,SACC,cAAC,IAAD,CAAMC,GAAI,GAAV,SACC,qBAAKH,MAAO,CAAEI,QAAS,OAAQC,eAAgB,gBAAiBC,aAAc,QAA9E,SACC,oBAAIN,MAAO,CAAEO,OAAQ,OAAQC,MAAO,QAApC,+CAKH,cAAC,IAAD,UACC,cAAC,IAAD,CAAML,GAAI,GAAV,SACC,qBAAKrB,GAAG,4B","file":"static/js/30.6c8f63dd.chunk.js","sourcesContent":["import * as am4core from '@amcharts/amcharts4/core';\r\nimport * as am4plugins_forceDirected from '@amcharts/amcharts4/plugins/forceDirected';\r\nimport am4themes_animated from '@amcharts/amcharts4/themes/animated';\r\nimport { CCard, CCol, CRow } from '@coreui/react';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport './chart.css';\r\n\r\nconst Category = () => {\r\n\tconst category = useSelector((state) => state.category);\r\n\tconst dispatch = useDispatch();\r\n\tconst [ show, setShow ] = useState(true);\r\n\r\n\tconst renderCategories = (categories) => {\r\n\t\tlet myCategories = [];\r\n\t\tfor (let category of categories) {\r\n\t\t\tmyCategories.push({\r\n\t\t\t\tname: category.name,\r\n\t\t\t\tvalue: category.children.length > 0 ? 0.3 : 0.2,\r\n\t\t\t\tchildren: category.children.length > 0 && renderCategories(category.children)\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn myCategories;\r\n\t};\r\n\r\n\tconst categoryList = renderCategories(category.categories);\r\n\r\n\tconsole.log({ categoryList });\r\n\r\n\tam4core.useTheme(am4themes_animated);\r\n\t// Themes end\r\n\r\n\tlet chart = am4core.create('chartdiv', am4plugins_forceDirected.ForceDirectedTree);\r\n\t// chart.legend = new am4charts.Legend();\r\n\r\n\tlet networkSeries = chart.series.push(new am4plugins_forceDirected.ForceDirectedSeries());\r\n\r\n\tnetworkSeries.dataFields.linkWith = 'linkWith';\r\n\tnetworkSeries.dataFields.name = 'name';\r\n\tnetworkSeries.dataFields.id = 'name';\r\n\tnetworkSeries.dataFields.value = 'value';\r\n\tnetworkSeries.dataFields.children = 'children';\r\n\r\n\tnetworkSeries.nodes.template.tooltipText = '{name}';\r\n\tnetworkSeries.nodes.template.fillOpacity = 1;\r\n\r\n\tnetworkSeries.data = categoryList;\r\n\r\n\tnetworkSeries.nodes.template.label.text = '{name}';\r\n\tnetworkSeries.fontSize = 12;\r\n\tnetworkSeries.maxLevels = 4;\r\n\tnetworkSeries.maxRadius = am4core.percent(6);\r\n\tnetworkSeries.manyBodyStrength = -16;\r\n\tnetworkSeries.nodes.template.label.hideOversized = true;\r\n\tnetworkSeries.nodes.template.label.truncate = true;\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (!category.loading) {\r\n\t\t\t\tsetShow(false);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[ category.loading ]\r\n\t);\r\n\r\n\t// console.log({ categoryList })\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<CRow>\r\n\t\t\t\t<CCol xs=\"12\">\r\n\t\t\t\t\t<CCard>\r\n\t\t\t\t\t\t<CRow style={{ background: '#67dcbb', borderRadius: '5px' }}>\r\n\t\t\t\t\t\t\t<CCol md={12}>\r\n\t\t\t\t\t\t\t\t<div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '15px' }}>\r\n\t\t\t\t\t\t\t\t\t<h1 style={{ margin: '1rem', color: '#333' }}>Toutes les Cate&#769;gories</h1>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</CCol>\r\n\t\t\t\t\t\t</CRow>\r\n\r\n\t\t\t\t\t\t<CRow>\r\n\t\t\t\t\t\t\t<CCol md={12}>\r\n\t\t\t\t\t\t\t\t<div id=\"chartdiv\" />\r\n\t\t\t\t\t\t\t</CCol>\r\n\t\t\t\t\t\t</CRow>\r\n\t\t\t\t\t</CCard>\r\n\t\t\t\t</CCol>\r\n\t\t\t</CRow>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default Category;\r\n"],"sourceRoot":""}
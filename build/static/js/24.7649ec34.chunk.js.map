{"version":3,"sources":["reusable/DocsLink.js","views/category/AllCategories/index.js"],"names":["DocsLink","props","name","text","rest","href","className","rel","target","React","memo","Category","category","useSelector","state","useDispatch","useState","setShow","categoryList","renderCategories","categories","myCategories","push","value","children","length","undefined","am4core","am4themes_animated","networkSeries","am4plugins_forceDirected","series","dataFields","linkWith","id","nodes","template","tooltipText","fillOpacity","data","label","fontSize","maxLevels","maxRadius","manyBodyStrength","hideOversized","truncate","useEffect","loading","Fragment","xs","style","background","borderRadius","md","display","justifyContent","marginBottom","margin","color"],"mappings":"mPAGMA,EAAW,SAAAC,GAAU,IAEvBC,EAGED,EAHFC,KACAC,EAEEF,EAFFE,KACGC,EAJmB,YAKpBH,EALoB,iBAOlBI,EAAOH,EAAI,kDAA8CA,GAASD,EAAMI,KAE9E,OACE,qBAAKC,UAAU,sBAAf,SACE,cAAC,IAAD,2BACMF,GADN,IAEEC,KAAMA,EACNE,IAAI,sBACJC,OAAO,SACPF,UAAU,qBALZ,SAOE,uBAAOA,UAAU,aAAjB,SAAgCH,GAAQ,eAMjCM,MAAMC,KAAKV,I,2JC4EXW,UA3FE,WAChB,IAAMC,EAAWC,aAAY,SAACC,GAAD,OAAWA,EAAMF,YADxB,GAELG,cACOC,oBAAS,IAHX,mBAGTC,GAHS,WAkBhBC,EAZmB,SAAnBC,EAAoBC,GACzB,IADwC,EACpCC,EAAe,GADqB,cAEnBD,GAFmB,IAExC,2BAAiC,CAAC,IAAzBR,EAAwB,QAChCS,EAAaC,KAAK,CACjBpB,KAAMU,EAASV,KACfqB,MAAOX,EAASY,SAASC,OAAS,OAAIC,EAAY,EAClDF,SAAUZ,EAASY,SAASC,OAAS,GAAKN,EAAiBP,EAASY,aAN9B,8BASxC,OAAOH,EAGaF,CAAiBP,EAASQ,YAEhDO,IAAiBC,KAGjB,IAGIC,EAHQF,IAAe,WAAYG,KAGbC,OAAOT,KAAK,IAAIQ,KAkCzC,OA/BDD,EAAcG,WAAWC,SAAW,WACpCJ,EAAcG,WAAW9B,KAAO,OAChC2B,EAAcG,WAAWE,GAAK,OAC9BL,EAAcG,WAAWT,MAAQ,QACjCM,EAAcG,WAAWR,SAAW,WAEpCK,EAAcM,MAAMC,SAASC,YAAc,SAC3CR,EAAcM,MAAMC,SAASE,YAAc,EAE3CT,EAAcU,KAAOrB,EAErBW,EAAcM,MAAMC,SAASI,MAAMrC,KAAO,SAC1C0B,EAAcY,SAAW,GACzBZ,EAAca,UAAY,EAC1Bb,EAAcc,UAAYhB,IAAgB,GAC1CE,EAAce,kBAAoB,GAClCf,EAAcM,MAAMC,SAASI,MAAMK,eAAgB,EACnDhB,EAAcM,MAAMC,SAASI,MAAMM,UAAW,EAE7CC,qBACC,WACMnC,EAASoC,SACb/B,GAAQ,KAGV,CAAEL,EAASoC,UAOX,cAAC,IAAMC,SAAP,UAEA,cAAC,IAAD,UACC,cAAC,IAAD,CAAMC,GAAG,KAAT,SACC,eAAC,IAAD,WACE,cAAC,IAAD,CAAMC,MAAO,CAAEC,WAAa,UAAUC,aAAc,OAApD,SACC,cAAC,IAAD,CAAMC,GAAI,GAAV,SACC,qBAAKH,MAAO,CAAEI,QAAS,OAAQC,eAAgB,gBAAiBC,aAAc,QAA9E,SACC,oBAAIN,MAAO,CAAEO,OAAQ,OAAQC,MAAO,QAApC,+CAKH,cAAC,IAAD,UACC,cAAC,IAAD,CAAML,GAAI,GAAV,SACC,qBAAKpB,GAAG,4B","file":"static/js/24.7649ec34.chunk.js","sourcesContent":["import React from 'react'\nimport { CLink } from '@coreui/react'\n\nconst DocsLink = props => {\n  const {\n    name,\n    text,\n    ...rest\n  } = props\n\n  const href = name ? `https://coreui.io/react/docs/components/${name}` : props.href\n\n  return (\n    <div className=\"card-header-actions\">\n      <CLink \n        {...rest}\n        href={href}\n        rel=\"noreferrer noopener\" \n        target=\"_blank\" \n        className=\"card-header-action\"  \n      >\n        <small className=\"text-muted\">{ text || 'docs' }</small>\n      </CLink>\n    </div>\n  )\n}\n\nexport default React.memo(DocsLink)","import { CButton, CCard, CCardBody, CCardHeader, CCol, CRow } from '@coreui/react';\nimport React, { useEffect, useLayoutEffect, useRef, useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport * as am4plugins_forceDirected from \"@amcharts/amcharts4/plugins/forceDirected\"; \nimport { useDispatch, useSelector } from 'react-redux';\nimport { DocsLink } from 'src/reusable';\nimport './chart.css';\n\n\nconst Category = () => {\n\tconst category = useSelector((state) => state.category);\n\tconst dispatch = useDispatch();\n\tconst [show, setShow] = useState(true);\n\n\n\tconst renderCategories = (categories) => {\n\t\tlet myCategories = [];\n\t\tfor (let category of categories) {\n\t\t\tmyCategories.push({\n\t\t\t\tname: category.name,\n\t\t\t\tvalue: category.children.length > 0 ? undefined : 1,\n\t\t\t\tchildren: category.children.length > 0 && renderCategories(category.children)\n\t\t\t});\n\t\t}\n\t\treturn myCategories;\n\t};\n\n\tconst categoryList = renderCategories(category.categories);\n\nam4core.useTheme(am4themes_animated);\n// Themes end\n\nlet chart = am4core.create(\"chartdiv\", am4plugins_forceDirected.ForceDirectedTree);\n// chart.legend = new am4charts.Legend();\n\nlet networkSeries = chart.series.push(new am4plugins_forceDirected.ForceDirectedSeries())\n\n\nnetworkSeries.dataFields.linkWith = \"linkWith\";\nnetworkSeries.dataFields.name = \"name\";\nnetworkSeries.dataFields.id = \"name\";\nnetworkSeries.dataFields.value = \"value\";\nnetworkSeries.dataFields.children = \"children\";\n\nnetworkSeries.nodes.template.tooltipText = \"{name}\";\nnetworkSeries.nodes.template.fillOpacity = 1;\n\nnetworkSeries.data = categoryList;\n\t\nnetworkSeries.nodes.template.label.text = \"{name}\"\nnetworkSeries.fontSize = 12;\nnetworkSeries.maxLevels = 4;\nnetworkSeries.maxRadius = am4core.percent(6);\nnetworkSeries.manyBodyStrength = -16;\nnetworkSeries.nodes.template.label.hideOversized = true;\nnetworkSeries.nodes.template.label.truncate = true;\n\n\tuseEffect(\n\t\t() => {\n\t\t\tif (!category.loading) {\n\t\t\t\tsetShow(false);\n\t\t\t}\n\t\t},\n\t\t[ category.loading ]\n\t);\n\n\t// console.log({ categoryList })\n\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t\n\t\t<CRow>\n\t\t\t<CCol xs=\"12\">\n\t\t\t\t<CCard>\t\n\t\t\t\t\t\t<CRow style={{ background: \t'#67dcbb',borderRadius: '5px' }}>\n\t\t\t\t\t\t\t<CCol md={12}>\n\t\t\t\t\t\t\t\t<div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '15px'}}>\n\t\t\t\t\t\t\t\t\t<h1 style={{ margin: '1rem', color: '#333' }}>Toutes les Cate&#769;gories</h1>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</CCol>\n\t\t\t\t\t\t</CRow>\n\n\t\t\t\t\t\t<CRow>\n\t\t\t\t\t\t\t<CCol md={12}>\n\t\t\t\t\t\t\t\t<div id=\"chartdiv\" ></div>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</CCol>\n\t\t\t\t\t\t</CRow>\t\t\t\n\n\n\t\t\t\t</CCard>\n\t\t\t</CCol>\n\n\t\t</CRow>\n\n</React.Fragment>\n\t);\n};\n\nexport default Category;\n"],"sourceRoot":""}
{"version":3,"sources":["components/UI/Input/index.js","components/UI/Email/ChatBody/index.js","views/email/ChatDetails/index.js"],"names":["Input","props","input","type","Group","label","Label","className","value","onChange","placeholder","options","length","map","option","index","name","Control","Text","errorMessage","ChatBody","Fragment","msgs","msg","s","formatDate6","o","r","i","ChatDetails","contact","conversations","find","id","location","pathname","split","contacts","src","avatar","alt","messages","variant"],"mappings":"uIAAA,4DAGe,SAASA,EAAMC,GAC7B,IAAIC,EAAQ,KAEZ,OAAQD,EAAME,MACb,IAAK,SACJD,EACC,eAAC,IAAKE,MAAN,WACEH,EAAMI,OAAS,cAAC,IAAKC,MAAN,UAAaL,EAAMI,QACnC,yBAAQE,UAAU,eAAeC,MAAOP,EAAMO,MAAOC,SAAUR,EAAMQ,SAArE,UACC,wBAAQD,MAAM,GAAd,SAAkBP,EAAMS,cACvBT,EAAMU,QAAQC,OAAS,EACvBX,EAAMU,QAAQE,KAAI,SAACC,EAAQC,GAAT,OACjB,wBAAoBP,MAAOM,EAAON,MAAlC,SACEM,EAAOE,MADID,MAIX,WAKP,MACD,IAAK,OACL,QACCb,EACC,eAAC,IAAKE,MAAN,WACEH,EAAMI,OAAS,cAAC,IAAKC,MAAN,UAAaL,EAAMI,QACnC,cAAC,IAAKY,QAAN,CACCd,KAAMF,EAAME,KACZO,YAAaT,EAAMS,YACnBF,MAAOP,EAAMO,MACbC,SAAUR,EAAMQ,WAEjB,cAAC,IAAKS,KAAN,CAAWX,UAAU,aAArB,SAAmCN,EAAMkB,kBAK7C,OAAOjB,I,mLCrCO,SAASkB,EAASnB,GAEhC,OACC,cAAC,IAAMoB,SAAP,UACGpB,EAAMqB,MACNrB,EAAMqB,KAAKT,KAAI,SAACU,EAAKR,GAAN,OACd,sBAAiBR,UAAU,eAA3B,UACC,sBAAKA,UAAU,WAAf,UACC,qBAAKA,UAAU,cAAf,SAA8BgB,EAAIC,IAClC,qBAAKjB,UAAU,YAAf,SAA4BkB,YAAYF,EAAIG,QAG7C,sBAAKnB,UAAU,WAAf,UACC,qBAAKA,UAAU,cAAf,SAA8BgB,EAAII,IAClC,qBAAKpB,UAAU,gBAAf,SAAgCkB,YAAYF,EAAIK,UARxCb,Q,sCCFD,SAASc,EAAY5B,GAYnC,IAAM6B,EAAUC,IAAcC,MAAK,SAACF,GAAD,OAAaA,EAAQG,KAAOhC,EAAMiC,SAASC,SAASC,MAAM,KAAK,MAKlG,OACC,cAAC,IAAMf,SAAP,UACC,sBAAKd,UAAU,uBAAf,UACC,cAAC,IAAD,CAAU8B,SAAUN,MACpB,sBAAKxB,UAAU,uCAAf,UACEuB,EACA,sBAAKvB,UAAU,iBAAf,UACC,sBAAKA,UAAU,UAAf,UACC,qBAAKA,UAAU,sBAAf,SACC,qBAAK+B,IAAKR,EAAQS,OAAQC,IAAI,OAE/B,sBAAMjC,UAAU,2BAAhB,SAA4CuB,EAAQd,UAErD,qBAAKT,UAAU,qBAAf,SACC,cAACa,EAAD,CAAUE,KAAMQ,EAAQW,gBAI1B,mBAAGlC,UAAU,oBAAb,0CAGD,sBAAKA,UAAU,uBAAf,UACC,cAACP,EAAA,EAAD,CAAOG,KAAK,OAAOO,YAAY,4BAC/B,cAAC,IAAD,CAASH,UAAU,YAAYmC,QAAQ,UAAvC","file":"static/js/37.a9fd9ea5.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Form } from 'react-bootstrap';\r\n\r\nexport default function Input(props) {\r\n\tlet input = null;\r\n\r\n\tswitch (props.type) {\r\n\t\tcase 'select':\r\n\t\t\tinput = (\r\n\t\t\t\t<Form.Group>\r\n\t\t\t\t\t{props.label && <Form.Label>{props.label}</Form.Label>}\r\n\t\t\t\t\t<select className=\"form-control\" value={props.value} onChange={props.onChange}>\r\n\t\t\t\t\t\t<option value=\"\">{props.placeholder}</option>\r\n\t\t\t\t\t\t{props.options.length > 0 ? (\r\n\t\t\t\t\t\t\tprops.options.map((option, index) => (\r\n\t\t\t\t\t\t\t\t<option key={index} value={option.value}>\r\n\t\t\t\t\t\t\t\t\t{option.name}\r\n\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t</select>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t);\r\n\r\n\t\t\tbreak;\r\n\t\tcase 'text':\r\n\t\tdefault:\r\n\t\t\tinput = (\r\n\t\t\t\t<Form.Group>\r\n\t\t\t\t\t{props.label && <Form.Label>{props.label}</Form.Label>}\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\ttype={props.type}\r\n\t\t\t\t\t\tplaceholder={props.placeholder}\r\n\t\t\t\t\t\tvalue={props.value}\r\n\t\t\t\t\t\tonChange={props.onChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Form.Text className=\"text-muted\">{props.errorMessage}</Form.Text>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t);\r\n\t}\r\n\r\n\treturn input;\r\n}\r\n","import React from 'react';\r\nimport { formatDate6 } from 'src/urlConfig';\r\nimport './style.css';\r\n\r\nexport default function ChatBody(props) {\r\n\t// console.log({ props });\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t\t{props.msgs &&\r\n\t\t\t\t\tprops.msgs.map((msg, index) => (\r\n\t\t\t\t\t\t<div key={index} className=\"chat-bubbles\">\r\n\t\t\t\t\t\t\t<div className=\"outgoing\">\r\n\t\t\t\t\t\t\t\t<div className=\"chat-bubble\">{msg.s}</div>\r\n\t\t\t\t\t\t\t\t<div className=\"sent-time\">{formatDate6(msg.o)}</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div className=\"incoming\">\r\n\t\t\t\t\t\t\t\t<div className=\"chat-bubble\">{msg.r}</div>\r\n\t\t\t\t\t\t\t\t<div className=\"received-time\">{formatDate6(msg.i)}</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))}\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n","import { CButton } from '@coreui/react';\r\nimport React from 'react';\r\nimport ChatBody from 'src/components/UI/Email/ChatBody';\r\nimport ChatList from 'src/components/UI/Email/Chats';\r\nimport Input from 'src/components/UI/Input';\r\nimport { conversations } from '../Chats/chatList';\r\nimport './style.css';\r\n\r\nexport default function ChatDetails(props) {\r\n\t// const [ messages, setMessages ] = useState(msgs);\r\n\r\n\t// useEffect(async () => {\r\n\t// \tconst msg = await axiosInstance.get('https://my.api.mockaroo.com/user_chats_schema.json?key=37f692d0');\r\n\t// \tawait setMessages(msg.data);\r\n\t// \t// console.log({ msg });\r\n\t// }, []);\r\n\r\n\t// let msgId = props.location.pathname.split('/')[3];\r\n\t// // console.log({ msgId });\r\n\r\n\tconst contact = conversations.find((contact) => contact.id === props.location.pathname.split('/')[3]);\r\n\r\n\t// console.log(`From ChatDetails`, { contacts });\r\n\t// console.log({ contact });\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<div className=\"flexRowChat darkerBg\">\r\n\t\t\t\t<ChatList contacts={conversations} />\r\n\t\t\t\t<div className=\"rightHand ml-2 normalBg outline mb-2\">\r\n\t\t\t\t\t{contact ? (\r\n\t\t\t\t\t\t<div className=\"chat-container\">\r\n\t\t\t\t\t\t\t<div className=\"flexRow\">\r\n\t\t\t\t\t\t\t\t<div className=\"m-3 image-container\">\r\n\t\t\t\t\t\t\t\t\t<img src={contact.avatar} alt=\"\" />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<span className=\"user light mt-3 ft2 bold\">{contact.name}</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"chat-messages mb-5\">\r\n\t\t\t\t\t\t\t\t<ChatBody msgs={contact.messages} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<p className=\"vcenter light p-3\">Selectioner une Conversation</p>\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t<div className=\"dark flexRow chatapp\">\r\n\t\t\t\t\t\t<Input type=\"text\" placeholder=\"écrire un méssage\" />\r\n\t\t\t\t\t\t<CButton className=\"chat-send\" variant=\"outline\">\r\n\t\t\t\t\t\t\tEnvoyer\r\n\t\t\t\t\t\t</CButton>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n"],"sourceRoot":""}
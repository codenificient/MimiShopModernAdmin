{"version":3,"sources":["views/category/AllCategories/index.js"],"names":["Category","category","useSelector","state","useState","setShow","categoryList","renderCategories","categories","myCategories","push","name","value","children","length","am4core","am4themes_animated","networkSeries","am4plugins_forceDirected","series","dataFields","linkWith","id","nodes","template","tooltipText","fillOpacity","data","label","text","fontSize","maxLevels","maxRadius","manyBodyStrength","hideOversized","truncate","useEffect","loading","Fragment","xs","style","background","borderRadius","md","display","justifyContent","marginBottom","margin","color"],"mappings":"sQA2FeA,UAnFE,WAChB,IAAMC,EAAWC,aAAY,SAACC,GAAD,OAAWA,EAAMF,YAC9C,EAA0BG,oBAAS,GAAnC,mBAAcC,GAAd,WAcMC,EAZmB,SAAnBC,EAAoBC,GACzB,IADwC,EACpCC,EAAe,GADqB,cAEnBD,GAFmB,IAExC,2BAAiC,CAAC,IAAzBP,EAAwB,QAChCQ,EAAaC,KAAK,CACjBC,KAAMV,EAASU,KACfC,MAAOX,EAASY,SAASC,OAAS,EAAI,GAAM,GAC5CD,SAAUZ,EAASY,SAASC,OAAS,GAAKP,EAAiBN,EAASY,aAN9B,8BASxC,OAAOJ,EAGaF,CAAiBN,EAASO,YAI/CO,IAAiBC,KAGjB,IAGIC,EAHQF,IAAe,WAAYG,KAGbC,OAAOT,KAAK,IAAIQ,KAgC1C,OA9BAD,EAAcG,WAAWC,SAAW,WACpCJ,EAAcG,WAAWT,KAAO,OAChCM,EAAcG,WAAWE,GAAK,OAC9BL,EAAcG,WAAWR,MAAQ,QACjCK,EAAcG,WAAWP,SAAW,WAEpCI,EAAcM,MAAMC,SAASC,YAAc,SAC3CR,EAAcM,MAAMC,SAASE,YAAc,EAE3CT,EAAcU,KAAOrB,EAErBW,EAAcM,MAAMC,SAASI,MAAMC,KAAO,SAC1CZ,EAAca,SAAW,GACzBb,EAAcc,UAAY,EAC1Bd,EAAce,UAAYjB,IAAgB,GAC1CE,EAAcgB,kBAAoB,GAClChB,EAAcM,MAAMC,SAASI,MAAMM,eAAgB,EACnDjB,EAAcM,MAAMC,SAASI,MAAMO,UAAW,EAE9CC,qBACC,WACMnC,EAASoC,SACbhC,GAAQ,KAGV,CAAEJ,EAASoC,UAMX,cAAC,IAAMC,SAAP,UACC,cAAC,IAAD,UACC,cAAC,IAAD,CAAMC,GAAG,KAAT,SACC,eAAC,IAAD,WACC,cAAC,IAAD,CAAMC,MAAO,CAAEC,WAAY,UAAWC,aAAc,OAApD,SACC,cAAC,IAAD,CAAMC,GAAI,GAAV,SACC,qBAAKH,MAAO,CAAEI,QAAS,OAAQC,eAAgB,gBAAiBC,aAAc,QAA9E,SACC,oBAAIN,MAAO,CAAEO,OAAQ,OAAQC,MAAO,QAApC,+CAKH,cAAC,IAAD,UACC,cAAC,IAAD,CAAML,GAAI,GAAV,SACC,qBAAKrB,GAAG,4B","file":"static/js/42.ab4a194f.chunk.js","sourcesContent":["import * as am4core from '@amcharts/amcharts4/core';\nimport * as am4plugins_forceDirected from '@amcharts/amcharts4/plugins/forceDirected';\nimport am4themes_animated from '@amcharts/amcharts4/themes/animated';\nimport { CCard, CCol, CRow } from '@coreui/react';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport './chart.css';\n\nconst Category = () => {\n\tconst category = useSelector((state) => state.category);\n\tconst [ show, setShow ] = useState(true);\n\n\tconst renderCategories = (categories) => {\n\t\tlet myCategories = [];\n\t\tfor (let category of categories) {\n\t\t\tmyCategories.push({\n\t\t\t\tname: category.name,\n\t\t\t\tvalue: category.children.length > 0 ? 0.2 : 0.1,\n\t\t\t\tchildren: category.children.length > 0 && renderCategories(category.children)\n\t\t\t});\n\t\t}\n\t\treturn myCategories;\n\t};\n\n\tconst categoryList = renderCategories(category.categories);\n\n\t// console.log({ categoryList });\n\n\tam4core.useTheme(am4themes_animated);\n\t// Themes end\n\n\tlet chart = am4core.create('chartdiv', am4plugins_forceDirected.ForceDirectedTree);\n\t// chart.legend = new am4charts.Legend();\n\n\tlet networkSeries = chart.series.push(new am4plugins_forceDirected.ForceDirectedSeries());\n\n\tnetworkSeries.dataFields.linkWith = 'linkWith';\n\tnetworkSeries.dataFields.name = 'name';\n\tnetworkSeries.dataFields.id = 'name';\n\tnetworkSeries.dataFields.value = 'value';\n\tnetworkSeries.dataFields.children = 'children';\n\n\tnetworkSeries.nodes.template.tooltipText = '{name}';\n\tnetworkSeries.nodes.template.fillOpacity = 1;\n\n\tnetworkSeries.data = categoryList;\n\n\tnetworkSeries.nodes.template.label.text = '{name}';\n\tnetworkSeries.fontSize = 12;\n\tnetworkSeries.maxLevels = 4;\n\tnetworkSeries.maxRadius = am4core.percent(6);\n\tnetworkSeries.manyBodyStrength = -16;\n\tnetworkSeries.nodes.template.label.hideOversized = true;\n\tnetworkSeries.nodes.template.label.truncate = true;\n\n\tuseEffect(\n\t\t() => {\n\t\t\tif (!category.loading) {\n\t\t\t\tsetShow(false);\n\t\t\t}\n\t\t},\n\t\t[ category.loading ]\n\t);\n\n\t// console.log({ categoryList })\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<CRow>\n\t\t\t\t<CCol xs=\"12\">\n\t\t\t\t\t<CCard>\n\t\t\t\t\t\t<CRow style={{ background: '#67dcbb', borderRadius: '5px' }}>\n\t\t\t\t\t\t\t<CCol md={12}>\n\t\t\t\t\t\t\t\t<div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '15px' }}>\n\t\t\t\t\t\t\t\t\t<h1 style={{ margin: '1rem', color: '#333' }}>Toutes les Cate&#769;gories</h1>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</CCol>\n\t\t\t\t\t\t</CRow>\n\n\t\t\t\t\t\t<CRow>\n\t\t\t\t\t\t\t<CCol md={12}>\n\t\t\t\t\t\t\t\t<div id=\"chartdiv\" />\n\t\t\t\t\t\t\t</CCol>\n\t\t\t\t\t\t</CRow>\n\t\t\t\t\t</CCard>\n\t\t\t\t</CCol>\n\t\t\t</CRow>\n\t\t</React.Fragment>\n\t);\n};\n\nexport default Category;"],"sourceRoot":""}
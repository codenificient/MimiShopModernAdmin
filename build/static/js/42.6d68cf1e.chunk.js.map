{"version":3,"sources":["../node_modules/react-bootstrap/esm/ThemeProvider.js","views/email/Chats/index.js"],"names":["ThemeContext","React","createContext","Consumer","Provider","useBootstrapPrefix","prefix","defaultPrefix","prefixes","useContext","Chats","props","Fragment","className","contacts"],"mappings":"uIAAA,4DAEIA,EAA4BC,IAAMC,cAAc,IACrCF,EAAaG,SACbH,EAAaI,SAarB,SAASC,EAAmBC,EAAQC,GACzC,IAAIC,EAAWC,qBAAWT,GAC1B,OAAOM,GAAUE,EAASD,IAAkBA,I,iCCnB9C,sGAKe,SAASG,EAAMC,GAG7B,OACC,cAAC,IAAMC,SAAP,UACC,sBAAKC,UAAU,uBAAf,UACC,cAAC,IAAD,CAAUC,SAAUA,MACpB,qBAAKD,UAAU,6CAAf,SACC,mBAAGA,UAAU,2BAAb,uD","file":"static/js/42.6d68cf1e.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React, { useContext, useMemo } from 'react';\nvar ThemeContext = /*#__PURE__*/React.createContext({});\nvar Consumer = ThemeContext.Consumer,\n    Provider = ThemeContext.Provider;\n\nfunction ThemeProvider(_ref) {\n  var prefixes = _ref.prefixes,\n      children = _ref.children;\n  var copiedPrefixes = useMemo(function () {\n    return _extends({}, prefixes);\n  }, [prefixes]);\n  return /*#__PURE__*/React.createElement(Provider, {\n    value: copiedPrefixes\n  }, children);\n}\n\nexport function useBootstrapPrefix(prefix, defaultPrefix) {\n  var prefixes = useContext(ThemeContext);\n  return prefix || prefixes[defaultPrefix] || defaultPrefix;\n}\n\nfunction createBootstrapComponent(Component, opts) {\n  if (typeof opts === 'string') opts = {\n    prefix: opts\n  };\n  var isClassy = Component.prototype && Component.prototype.isReactComponent; // If it's a functional component make sure we don't break it with a ref\n\n  var _opts = opts,\n      prefix = _opts.prefix,\n      _opts$forwardRefAs = _opts.forwardRefAs,\n      forwardRefAs = _opts$forwardRefAs === void 0 ? isClassy ? 'ref' : 'innerRef' : _opts$forwardRefAs;\n  var Wrapped = /*#__PURE__*/React.forwardRef(function (_ref2, ref) {\n    var props = _extends({}, _ref2);\n\n    props[forwardRefAs] = ref;\n    var bsPrefix = useBootstrapPrefix(props.bsPrefix, prefix);\n    return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n      bsPrefix: bsPrefix\n    }));\n  });\n  Wrapped.displayName = \"Bootstrap(\" + (Component.displayName || Component.name) + \")\";\n  return Wrapped;\n}\n\nexport { createBootstrapComponent, Consumer as ThemeConsumer };\nexport default ThemeProvider;","import React from 'react';\r\nimport ChatList from 'src/components/UI/Email/Chats';\r\nimport './style.css';\r\nimport { contacts } from './userChats';\r\n\r\nexport default function Chats(props) {\r\n\tconst icons = [ 'cil-star' ];\r\n\t// console.log(`From Chat`, { contacts });\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<div className=\"flexRowChat darkerBg\">\r\n\t\t\t\t<ChatList contacts={contacts} />\r\n\t\t\t\t<div className=\"rightHand ml-2 normalBg outline mb-2 light\">\r\n\t\t\t\t\t<p className=\"chat-container p-3 black\">SÃ©lectionner une Conversation</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n"],"sourceRoot":""}